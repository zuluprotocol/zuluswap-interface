name: 'ZuluSwap Interface CI'

concurrency:
  group: ci-workflow-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main

env:
  SERVICE: zuluswap-interface

jobs:
  prepare:
    runs-on: ubuntu-20.04
    outputs:
      current_branch: ${{ steps.current_branch.outputs.value }}
      head_sha: ${{ steps.head_sha.outputs.value }}
      image_name: 'asia.gcr.io/zulu-operation/core/${{ env.SERVICE }}'
      image_tag: ${{ steps.get_tag.outputs.image_tag }}
      image_tag_stg: ${{ steps.get_tag.outputs.image_tag_stg }}
      branch_tag: ${{ steps.get_tag.outputs.branch_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract branch
        shell: bash
        id: current_branch
        run: |
          if [[ ! "${{ github.ref }}"  = "refs/tags/"* ]]; then
            if [[ "${{ github.event_name }}" = "pull_request" ]]; then
              HEAD_REF=$(printf "%q" "${{ github.head_ref }}")
              HEAD_REF=${HEAD_REF/refs\/heads\//}
              BRANCH=$HEAD_REF
            else
              REF=$(printf "%q" "${{ github.ref }}")
              REF_BRANCH=${REF/refs\/pull\//}
              REF_BRANCH=${REF_BRANCH/refs\/heads\//}
              BRANCH=$REF_BRANCH
            fi
          else
            REF=$(printf "%q" "${{ github.ref }}")
            REF_BRANCH=${REF/refs\/tags\//}
            BRANCH=$REF_BRANCH
          fi
          echo "::set-output name=value::$BRANCH"

      - name: Extract GitHub HEAD SHA
        id: head_sha
        run: echo "::set-output name=value::$(git rev-parse HEAD)"

      - name: Get Docker image tag
        id: get_tag
        env:
          CURRENT_BRANCH: ${{ steps.current_branch.outputs.value }}
        run: |
          short_sha="$(git rev-parse --short HEAD)"
          branch_tag="$(echo "$CURRENT_BRANCH" | sed 's/[^a-zA-Z0-9]/-/g' | sed 's/--*/-/g' | sed 's/-$//g')"
          echo "::set-output name=image_tag::$branch_tag-$short_sha"
          echo "::set-output name=image_tag_stg::$branch_tag-stg-build-$short_sha"
          echo "::set-output name=branch_tag::$branch_tag-$short_sha"

  build-dev:
    runs-on: ubuntu-20.04
    needs:
      - prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.18.1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Gcloud Auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ secrets.GCR_CREDENTIALS }}'

      - name: Setup Gcloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Configure docker
        run: gcloud auth configure-docker

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ env.SERVICE }}-buildx

      - name: Restore node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependences
        uses: bahmutov/npm-install@HEAD

      - name: Run Lint
        run: yarn lint --quiet

      - name: Yarn Build
        env:
          CI: false
          REACT_APP_TAG: ${{ needs.prepare.outputs.image_tag }}
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: yarn build-dev

      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          labels: |
            zulu.network.schema-version=1.0
            zulu.network.vcs-ref=${{ github.sha }}
            zulu.network.version=${{ needs.prepare.outputs.image_tag }}
            zulu.network.name=${{ env.SERVICE }}
          tags: |
            ${{ needs.prepare.outputs.image_name }}:${{ needs.prepare.outputs.image_tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  build-stg:
    runs-on: ubuntu-20.04
    needs:
      - prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.18.1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Gcloud Auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ secrets.GCR_CREDENTIALS }}'

      - name: Setup Gcloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Configure docker
        run: gcloud auth configure-docker

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ env.SERVICE }}-buildx

      - name: Restore node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependences
        uses: bahmutov/npm-install@HEAD

      - name: Run Lint
        run: yarn lint --quiet

      - name: Yarn Build
        env:
          CI: false
          REACT_APP_TAG: ${{ needs.prepare.outputs.image_tag_stg }}
        run: yarn build-stg

      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          labels: |
            zulu.network.schema-version=1.0
            zulu.network.vcs-ref=${{ github.sha }}
            zulu.network.version=${{ needs.prepare.outputs.image_tag_stg }}
            zulu.network.name=${{ env.SERVICE }}
          tags: |
            ${{ needs.prepare.outputs.image_name }}:${{ needs.prepare.outputs.image_tag_stg }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
